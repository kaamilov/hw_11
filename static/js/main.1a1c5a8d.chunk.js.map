{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Button/Button.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","disabled","emailReducer","state","action","emailValue","val","isValid","includes","initialState","undefined","passwordReducer","console","log","passwordValue","isPasswordValue","trim","length","initialPasswordState","Login","useReducer","emailState","dispatchEmail","passwordState","dispatchPassword","useState","formIsValid","setFormIsValid","emailIsValid","isPwdValue","useEffect","timer","setTimeout","clearTimeout","login","onSubmit","event","preventDefault","onLogin","control","invalid","htmlFor","title","id","value","onChange","target","onBlur","actions","btn","Home","home","Navigation","nav","isLoggedIn","href","onLogout","MainHeader","isAuthenticated","App","setIsLoggedIn","localStorage","getItem","logoutHandler","removeItem","Fragment","email","password","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a1c5a8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__24jQt\",\"control\":\"Login_control__2GCwf\",\"invalid\":\"Login_invalid__3fMXZ\",\"actions\":\"Login_actions__2omDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2rAqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1tOjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__35go4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__31t4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__y4dny\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useReducer, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"INPUT_EMAIL\") {\n    return {\n      emailValue: action.val,\n      isValid: action.val.includes(\"@\"),\n    };\n  }\n  if (action.type === \"INPUT_EMAIL_BLUR\") {\n    return {\n      emailValue: state.emailValue,\n      isValid: state.emailValue.includes(\"@\"),\n    };\n  }\n  return state;\n};\n\nconst initialState = {\n  emailValue: \"\",\n  isValid: undefined,\n};\n\nconst passwordReducer = (state, action) => {\n  console.log(state, 'state');\n  console.log(action, 'action');\n  if (action.type === \"INPUT_PASSWORD\") {\n    return {\n      passwordValue: action.val,\n      isPasswordValue: action.val.trim().length > 6,\n    };\n  }\n  if (action.type === \"INPUT_PASSWORD_BLUR\") {\n    console.log('input-password-blur working');\n    return {\n      passwordValue: state.passwordValue,\n      isPasswordValue: state.passwordValue.trim().length > 6,\n    };\n  }\n  return state;\n};\n\nconst initialPasswordState = {\n  passwordValue: \"\",\n  isPasswordValue: undefined,\n};\n\n\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, initialState);\n  const [passwordState, dispatchPassword] = useReducer(\n    passwordReducer,\n    initialPasswordState\n  );\n\n\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isPasswordValue: isPwdValue } = passwordState;\n\n\n\n  useEffect(() => {\n    // useEffect hook\n    const timer = setTimeout(() => {\n      setFormIsValid(\n        !emailState.emailValue.includes(\"@\") &&\n          passwordState.passwordValue.trim().length > 6 // user жазган email де @ белгиси жок болсо  false  болот && password узундугу 6 дан чон болсо\n      );\n      setFormIsValid(passwordState.passwordValue)\n    }, 1500); //\n\n\n    return () => {\n      //  clean up function\n      console.log(\"clean up\");\n      clearTimeout(timer);\n    };\n  }, [emailIsValid, isPwdValue]); //\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"INPUT_EMAIL\", val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"INPUT_PASSWORD\", val: event.target.value });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_EMAIL_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_PASSWORD_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // props.onLogin(emailState.emailValue, passwordState.passwordValue);\n    props.onLogin(emailState.emailValue, passwordState.passwordValue);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.emailValue === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\" className={classes.title}>\n            E-Mail\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.emailValue}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.passwordValue === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.passwordValue}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;","import React from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\n\nconst Home = (props) => {\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport classes from './Navigation.module.css';\n\nconst Navigation = (props) => {\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <button onClick={props.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation isLoggedIn={props.isAuthenticated} onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useEffect, useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [state,setState]= useState(0)\n  useEffect(()=>{\n\n   const storedLogginInfo =localStorage.getItem(\"isLogin\")\n   if(storedLogginInfo===\"1\"){\n    setIsLoggedIn(true)\n   }\n  //  locolдон алдык и проверка идет если тру то setIsLoggedIn(true)тоже тру\n  },[state])\n \n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLogin\",\"1\")\n    // сохраняем на локол стореча\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"isLogin\")\n    // удаляем из локолстареч\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n        {/* <button onClick={add}>add</button> */}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}